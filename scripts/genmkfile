#!/usr/bin/env bash
set +f
build=/home/abs/build
builddir=/home/abs/builddir
packages=/home/abs/packages
pwd=$(pwd)
repo="/home/abs/gimokod/${pwd##*/}"

# Helper functions should not echo \n. Main script handles EOLs.

getpkgbin() {
    local pkg pkgbin
    for pkg in $(echo -n ${repo}/$1-*-*-*.pkg.tar.??); do
        pkgbin="${pkg##*/}"
        if [[ "${pkgbin%-*-*-*.pkg.tar.??}" = "$1" ]]; then
            [[ -f ${pkg} ]] && echo -n "${pkg}"
        fi
    done
}

getpkgnames() {
    local pkgbuild
    pkgbuild="${build}/${pwd##*/}/$1/PKGBUILD"
    ../scripts/getpkgnames.lua "${pkgbuild}"
}

getdep() {
    local dep
    for dep in $(../scripts/getdepends.lua ${build}/${pwd##*/}/$1/PKGBUILD); do
        # if matching binary package is found then
        # use the binary package file name
        # else if it matches a dir then use that
        if [[ $(getpkgbin ${dep})>/dev/null ]]; then
            getpkgbin ${dep} ; echo -n ' '
        else
            [[ -d ./${dep} ]] && echo -n "${dep} "
        fi
    done
}

pwddirs() {
    local dir
    for dir in *; do
        [[ -d ./${dir} ]] && echo -n "${dir} "
    done
}

echo "all:V: $(pwddirs)"
(
for pkg in $(pwddirs); do
  if [[ $(getpkgbin ${pkg}) ]]; then
    echo -n "${pkg}:V: $(getpkgbin ${pkg}) " ; getdep "${pkg}" ; echo
    echo "$(getpkgbin ${pkg}): ${build}/${pwd##*/}/${pkg}/PKGBUILD"
    echo "      rm -rf ${builddir}/*"
    echo "      cd $(pwd)/${pkg}"
    echo "      /usr/bin/makepkg --nocheck --noconfirm -ci"
    for oldpkg in $(getpkgnames ${pkg}); do
      echo "      rm -f $(getpkgbin ${oldpkg}){,.sig}"
    done
    for newpkg in $(getpkgnames ${pkg}); do
      newbin="${newpkg##*/}"
      echo "      mv ${packages}/${newbin%-*-*-*.pkg.tar.??}-*-*-*.pkg.tar.??{,.sig} ${repo} || true "
    done
  else
    echo -n "${pkg}:V: " ; getdep "${pkg}" ; echo
    echo "      rm -rf ${builddir}/*"
    echo "      cd $(pwd)/${pkg}"
    echo "      /usr/bin/makepkg --nocheck --noconfirm -ci"
    for newpkg in $(getpkgnames ${pkg}); do
      newbin="${newpkg##*/}"
      echo "      mv ${packages}/${newbin%-*-*-*.pkg.tar.??}-*-*-*.pkg.tar.??{,.sig} ${repo} || true "
    done
  fi
done
)
